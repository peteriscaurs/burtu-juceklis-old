{"version":3,"sources":["components/Nav.js","components/Table.js","components/WordMeaningModal.js","components/SearchWordsInput.js","components/SearchWords.js","components/SavedWords.js","components/Footer.js","endpoints.js","utilities/scrabbleWordFinder.js","components/useLocalStorage.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","to","Table","rows","savedWords","columns","label","field","width","conditionalProps","noRecordsFoundLabel","style","maxWidth","margin","entries","borderless","info","displayEntries","searchLabel","sortable","noBottomColumns","maxHeight","scrollX","paginationLabel","data","sort","a","b","value","hover","WordMeaningModal","toggle","selectedWord","handleSaveButtonClick","useState","setData","useEffect","fetch","letters","then","res","text","isSaved","some","word","isOpen","centered","dangerouslySetInnerHTML","__html","color","onClick","disabled","SearchWordsInput","onInputchange","handleSearchInputOnKeyDown","handleTableRowsChange","searchInput","textAlign","display","alignItems","type","placeholder","aria-label","onChange","onKeyDown","SearchWords","wordFinder","setSearchInput","tableRows","setTableRows","shouldShowModal","setShouldShowModal","setSelectedWord","renderWordSaved","length","find","map","saved","clickEvent","handleRowClick","e","target","event","key","SavedWords","handleDeleteButtonClick","Footer","href","endpoints","latvianScrabbleWordList","ScrabbleTreeNode","this","children","Object","create","ScrabbleDictionary","words","root","forEach","insert","cursor","letter","isWord","ScrabbleWordFinder","dict","validWords","node","results","push","seen","Set","ch","has","add","replace","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","About","App","scrabbleWordFinder","setScrabbleWordFinder","setSavedWords","fetchData","response","json","params","particlesConfig","marginBottom","exact","path","newSavedWords","concat","stopPropagation","savedWordsCopy","_","remove","currentWord","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21cf115c.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => (\r\n  <nav className=\"nav justify-content-center\">\r\n    <Link className=\"nav-link white-text\" to=\"/par\">\r\n      Par\r\n    </Link>\r\n    <Link className=\"nav-link white-text active\" to=\"/meklet\">\r\n      Meklēt\r\n    </Link>\r\n    <Link className=\"nav-link white-text\" to=\"/saglabatie\">\r\n      Saglabātie\r\n    </Link>\r\n  </nav>\r\n);\r\n\r\nexport default Nav;\r\n","import { MDBDataTable } from \"mdbreact\";\r\n\r\nexport default function Table({ rows, savedWords }) {\r\n  const columns = [\r\n    {\r\n      label: \"Vārds\",\r\n      field: \"word\",\r\n      width: 150,\r\n    },\r\n    {\r\n      label: \"Burti\",\r\n      field: \"length\",\r\n      width: 150,\r\n    },\r\n    {\r\n      label: \"Vērtība\",\r\n      field: \"value\",\r\n      width: 150,\r\n    },\r\n    {\r\n      label: savedWords ? \"Dzēst\" : \"Saglabāts\",\r\n      field: \"saved\",\r\n      width: 150,\r\n    },\r\n  ];\r\n\r\n  const conditionalProps = {\r\n    noRecordsFoundLabel: savedWords\r\n      ? \"Nav saglabātu vārdu\"\r\n      : \"Nav meklēšanas rezultātu\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto\" style={{ maxWidth: \"800px\", margin: \"2em\" }}>\r\n      <MDBDataTable\r\n        className=\"table-light rounded text-center overflow-hidden mx-2 mb-5\"\r\n        entries={50}\r\n        borderless\r\n        info={false}\r\n        displayEntries={false}\r\n        searchLabel=\"meklēt\"\r\n        sortable={false}\r\n        noBottomColumns\r\n        maxHeight=\"400px\"\r\n        scrollX\r\n        paginationLabel={[\"Iepriekšējā\", \"Nākamā\"]}\r\n        data={{\r\n          columns,\r\n          rows: rows ? rows.sort((a, b) => b.value - a.value) : [],\r\n        }}\r\n        hover\r\n        {...conditionalProps}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport \"./WordMeaningModal.scss\";\r\n\r\nfunction WordMeaningModal({\r\n  toggle,\r\n  selectedWord,\r\n  handleSaveButtonClick,\r\n  savedWords,\r\n}) {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://tezaurs.lv/api/retrieveEntry?hw=${selectedWord.letters}`)\r\n      .then((res) => res.text())\r\n      .then((text) => {\r\n        setData(text);\r\n      });\r\n  }, []);\r\n\r\n  const isSaved = (letters) => {\r\n    return savedWords.some((word) => word.letters === letters);\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBModal isOpen toggle={() => toggle(false)} centered>\r\n        <MDBModalBody>\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: data ? data : null,\r\n            }}\r\n          ></div>\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"dark\" onClick={() => toggle(false)}>\r\n            Aizvērt\r\n          </MDBBtn>\r\n          <MDBBtn\r\n            color=\"success\"\r\n            onClick={() => handleSaveButtonClick(selectedWord)}\r\n            {...(isSaved(selectedWord.letters)\r\n              ? { disabled: true, color: \"light\" }\r\n              : null)}\r\n          >\r\n            {isSaved(selectedWord.letters) ? \"Saglabāts\" : \"Saglabāt\"}\r\n          </MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default WordMeaningModal;\r\n","function SearchWordsInput({\r\n  onInputchange,\r\n  handleSearchInputOnKeyDown,\r\n  handleTableRowsChange,\r\n  searchInput,\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: \"400px\",\r\n        margin: \"1em auto\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"maize\"\r\n        className=\"form-control text-input\"\r\n        aria-label=\"Atrodi Scrabble vardus\"\r\n        onChange={onInputchange}\r\n        onKeyDown={handleSearchInputOnKeyDown}\r\n      ></input>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary btn-md\"\r\n        onClick={() => handleTableRowsChange(searchInput)}\r\n      >\r\n        <i className=\"fa fa-search fa-lg\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchWordsInput;\r\n","import { useState, useEffect } from \"react\";\r\nimport Table from \"./Table\";\r\nimport WordMeaningModal from \"./WordMeaningModal\";\r\nimport SearchWordsInput from \"./SearchWordsInput\";\r\n\r\nfunction SearchWords({ wordFinder, handleSaveButtonClick, savedWords }) {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [tableRows, setTableRows] = useState(null);\r\n  const [shouldShowModal, setShouldShowModal] = useState(false);\r\n  const [selectedWord, setSelectedWord] = useState({});\r\n\r\n  useEffect(() => {\r\n    handleTableRowsChange(searchInput);\r\n  }, [savedWords]);\r\n\r\n  const isSaved = (letters) => {\r\n    return savedWords.some((word) => word.letters === letters)\r\n      ? \"rgb(141, 212, 122)\"\r\n      : \"#212121\";\r\n  };\r\n\r\n  const renderWordSaved = (word) => (\r\n    <i\r\n      className={`fa fa-star fa-lg`}\r\n      style={{ color: `${isSaved(word.letters)}` }}\r\n    ></i>\r\n  );\r\n\r\n  const handleRowClick = (word) => {\r\n    setSelectedWord(word);\r\n    setShouldShowModal(true);\r\n  };\r\n\r\n  const handleTableRowsChange = (letters) => {\r\n    if (wordFinder !== null && letters.length !== 0) {\r\n      const res = wordFinder.find(letters);\r\n      const rows = res.map((word) => ({\r\n        word: word.letters,\r\n        length: word.letters.length,\r\n        value: word.value,\r\n        saved: renderWordSaved(word),\r\n        clickEvent: () => handleRowClick(word),\r\n      }));\r\n      setTableRows(rows);\r\n    }\r\n  };\r\n\r\n  const onInputchange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSearchInputOnKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleTableRowsChange(searchInput);\r\n    }\r\n  };\r\n\r\n  if (wordFinder !== null) {\r\n    return (\r\n      <div>\r\n        <SearchWordsInput\r\n          onInputchange={onInputchange}\r\n          handleSearchInputOnKeyDown={handleSearchInputOnKeyDown}\r\n          handleTableRowsChange={handleTableRowsChange}\r\n          searchInput={searchInput}\r\n        />\r\n        <Table rows={tableRows} />\r\n        {shouldShowModal && (\r\n          <WordMeaningModal\r\n            toggle={setShouldShowModal}\r\n            selectedWord={selectedWord}\r\n            handleSaveButtonClick={handleSaveButtonClick}\r\n            savedWords={savedWords}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default SearchWords;\r\n","import { useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport WordMeaningModal from \"./WordMeaningModal\";\r\n\r\nfunction SavedWords({ savedWords, handleDeleteButtonClick }) {\r\n  const [shouldShowModal, setShouldShowModal] = useState(false);\r\n  const [selectedWord, setSelectedWord] = useState(\"\");\r\n\r\n  const handleRowClick = (word) => {\r\n    setSelectedWord(word);\r\n    setShouldShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        savedWords\r\n        rows={savedWords.map((word) => ({\r\n          word: word.letters,\r\n          length: word.letters.length,\r\n          value: word.value,\r\n          saved: (\r\n            <i\r\n              className=\"fa fa-times-circle fa-lg\"\r\n              onClick={(event) => handleDeleteButtonClick(event, word)}\r\n            ></i>\r\n          ),\r\n          clickEvent: () => handleRowClick(word),\r\n        }))}\r\n      />\r\n      {shouldShowModal && (\r\n        <WordMeaningModal\r\n          toggle={setShouldShowModal}\r\n          word={selectedWord}\r\n          selectedWord={selectedWord}\r\n          savedWords={savedWords}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedWords;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-copyright\">\r\n        <p className=\"text-copyright\">\r\n          <span>\r\n            <a href=\"https://github.com/peteriscaurs/burtu-juceklis\">\r\n              <i className=\"fa fa-code\"></i>\r\n            </a>{\" \"}\r\n            by{\" \"}\r\n          </span>\r\n          <strong>Pēteris Čaurs </strong>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const endpoints = {\r\n  latvianScrabbleWordList:\r\n    \"https://raw.githubusercontent.com/peteriscaurs/latvian-scrabble-word-list/main/wordList.json\",\r\n};\r\n\r\nexport default endpoints;\r\n","class ScrabbleTreeNode {\r\n  constructor() {\r\n    this.children = Object.create(null);\r\n  }\r\n}\r\n\r\nclass ScrabbleDictionary {\r\n  constructor(words) {\r\n    this.root = new ScrabbleTreeNode();\r\n    words.forEach((word) => this.insert(word));\r\n  }\r\n  insert(word) {\r\n    let cursor = this.root;\r\n    for (let letter of word.letters) {\r\n      if (!cursor.children[letter]) {\r\n        cursor.children[letter] = new ScrabbleTreeNode();\r\n      }\r\n      cursor = cursor.children[letter];\r\n    }\r\n    cursor.isWord = true;\r\n    cursor.value = word.value;\r\n  }\r\n}\r\n\r\nclass ScrabbleWordFinder {\r\n  constructor(dict) {\r\n    this.dict = new ScrabbleDictionary(dict);\r\n  }\r\n  find(letters) {\r\n    return this.validWords(this.dict.root, letters);\r\n  }\r\n  validWords = function (node, letters, word = \"\", results = []) {\r\n    if (node.isWord) {\r\n      results.push({ letters: word, value: node.value });\r\n    }\r\n    const seen = new Set();\r\n    for (let ch of letters) {\r\n      if (!seen.has(ch)) {\r\n        seen.add(ch);\r\n        if (node.children[ch]) {\r\n          this.validWords(\r\n            node.children[ch],\r\n            letters.replace(ch, \"\"),\r\n            word + ch,\r\n            results\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n}\r\n\r\nexport default ScrabbleWordFinder;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","function About() {\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"4em auto\", textAlign: \"center\" }}>\r\n      <p>\"Burtu Juceklis\" ir radīts, lai palīdzētu Tev kļūt par Scrabble čempionu.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport particlesConfig from \"./particlesjs-config.json\";\nimport Nav from \"./components/Nav\";\nimport SearchWords from \"./components/SearchWords\";\nimport SavedWords from \"./components/SavedWords\";\nimport \"./App.scss\";\nimport { useEffect, useState } from \"react\";\nimport Footer from \"./components/Footer\";\nimport endpoints from \"./endpoints\";\nimport ScrabbleWordFinder from \"./utilities/scrabbleWordFinder\";\nimport useLocalStorage from \"./components/useLocalStorage\";\nimport About from \"./components/About\";\nimport _ from \"lodash\";\n\nconst App = () => {\n  const [scrabbleWordFinder, setScrabbleWordFinder] = useState(null);\n  const [savedWords, setSavedWords] = useLocalStorage(\"savedWords\", []);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    let data = null;\n    try {\n      const response = await fetch(endpoints.latvianScrabbleWordList);\n      data = await response.json();\n      const wordFinder = new ScrabbleWordFinder(data.words);\n      setScrabbleWordFinder(wordFinder);\n    } catch (error) {\n      console.log(\"Ooops...\", error);\n    }\n    return data;\n  };\n\n  const handleSaveButtonClick = (word) => {\n    const savedWordsCopy = [].concat(savedWords);\n    const newSavedWords = savedWordsCopy.concat(word);\n    setSavedWords(newSavedWords);\n    return savedWords;\n  };\n\n  const handleDeleteButtonClick = (event, word) => {\n    event.stopPropagation();\n    const savedWordsCopy = [].concat(savedWords);\n    const newSavedWords = _.remove(\n      savedWordsCopy,\n      (currentWord) => currentWord.letters !== word.letters\n    );\n    setSavedWords(newSavedWords);\n    return savedWords;\n  };\n\n  return (\n    <Router>\n      <div className=\"top-line\"></div>\n      <Particles className=\"particles\" params={particlesConfig} />\n      <h1 className=\"title\" style={{ marginBottom: \"0.1em\" }}>\n        Burtu Juceklis\n      </h1>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/par\" />\n        </Route>\n        <Route path=\"/par\"><About /></Route>\n        <Route path=\"/meklet\">\n          <SearchWords\n            wordFinder={scrabbleWordFinder}\n            handleSaveButtonClick={handleSaveButtonClick}\n            savedWords={savedWords}\n          />\n        </Route>\n        <Route path=\"/saglabatie\">\n          <SavedWords\n            savedWords={savedWords}\n            handleDeleteButtonClick={handleDeleteButtonClick}\n          />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport \"./assets/scss/mdb-free.scss\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}